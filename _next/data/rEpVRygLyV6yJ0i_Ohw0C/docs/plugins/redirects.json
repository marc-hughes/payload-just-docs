{"pageProps":{"frontMatter":{"title":"Redirects Plugin","label":"Redirects","order":40,"desc":"Automatically create redirects for your Payload application","keywords":"plugins, redirects, redirect, plugin, payload, cms, seo, indexing, search, search engine"},"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    img: \"img\",\n    a: \"a\",\n    code: \"code\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    pre: \"pre\",\n    h3: \"h3\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\"\n  }, _provideComponents(), props.components), {Banner} = _components;\n  if (!Banner) _missingMdxReference(\"Banner\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"https://img.shields.io/npm/v/@payloadcms/plugin-redirects\",\n        alt: \"https://www.npmjs.com/package/@payloadcms/plugin-redirects\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This plugin allows you to easily manage redirects for your application from within your \", _jsx(_components.a, {\n        href: \"../admin/overview\",\n        children: \"Admin Panel\"\n      }), \". It does so by adding a \", _jsx(_components.code, {\n        children: \"redirects\"\n      }), \" collection to your config that allows you specify a redirect from one URL to another. Your front-end application can use this data to automatically redirect users to the correct page using proper HTTP status codes. This is useful for SEO, indexing, and search engine ranking when re-platforming or when changing your URL structure.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"For example, if you have a page at \", _jsx(_components.code, {\n        children: \"/about\"\n      }), \" and you want to change it to \", _jsx(_components.code, {\n        children: \"/about-us\"\n      }), \", you can create a redirect from the old page to the new one, then you can use this data to write HTTP redirects into your front-end application. This will ensure that users are redirected to the correct page without penalty because search engines are notified of the change at the request level. This is a very lightweight plugin that will allow you to integrate managed redirects for any front-end framework.\"]\n    }), \"\\n\", _jsx(Banner, {\n      type: \"info\",\n      children: _jsxs(_components.p, {\n        children: [\"This plugin is completely open-source and the \", _jsx(_components.a, {\n          href: \"https://github.com/payloadcms/payload/tree/main/packages/plugin-redirects\",\n          children: \"source code can be found\\nhere\"\n        }), \".\\nIf you need help, check out our \", _jsx(_components.a, {\n          href: \"https://payloadcms.com/community-help\",\n          children: \"Community\\nHelp\"\n        }), \". If you think you've found a bug,\\nplease \", _jsx(_components.a, {\n          href: \"https://github.com/payloadcms/payload/issues/new?assignees=&labels=plugin%3A%redirects&template=bug_report.md&title=plugin-redirects%3A\",\n          children: \"open a new\\nissue\"\n        }), \"\\nwith as much detail as possible.\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Core features\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Adds a \", _jsx(_components.code, {\n          children: \"redirects\"\n        }), \" collection to your config that:\", \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [\"includes a \", _jsx(_components.code, {\n              children: \"from\"\n            }), \" and \", _jsx(_components.code, {\n              children: \"to\"\n            }), \" fields\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"allows \", _jsx(_components.code, {\n              children: \"to\"\n            }), \" to be a document reference\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Installation\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Install the plugin using any JavaScript package manager like \", _jsx(_components.a, {\n        href: \"https://pnpm.io\",\n        children: \"pnpm\"\n      }), \", \", _jsx(_components.a, {\n        href: \"https://npmjs.com\",\n        children: \"npm\"\n      }), \", or \", _jsx(_components.a, {\n        href: \"https://yarnpkg.com\",\n        children: \"Yarn\"\n      }), \":\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"  pnpm add @payloadcms/plugin-redirects\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Basic Usage\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"In the \", _jsx(_components.code, {\n        children: \"plugins\"\n      }), \" array of your \", _jsx(_components.a, {\n        href: \"https://payloadcms.com/docs/configuration/overview\",\n        children: \"Payload Config\"\n      }), \", call the plugin with \", _jsx(_components.a, {\n        href: \"#options\",\n        children: \"options\"\n      }), \":\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts\",\n        children: \"import { buildConfig } from 'payload'\\nimport { redirectsPlugin } from '@payloadcms/plugin-redirects'\\n\\nconst config = buildConfig({\\n  collections: [\\n    {\\n      slug: 'pages',\\n      fields: [],\\n    },\\n  ],\\n  plugins: [\\n    redirectsPlugin({\\n      collections: ['pages'],\\n    }),\\n  ],\\n})\\n\\nexport default config\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Options\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Option\"\n          }), _jsx(_components.th, {\n            children: \"Type\"\n          }), _jsx(_components.th, {\n            children: \"Description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"collections\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"string[]\"\n            })\n          }), _jsxs(_components.td, {\n            children: [\"An array of collection slugs to populate in the \", _jsx(_components.code, {\n              children: \"to\"\n            }), \" field of each redirect.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"overrides\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"object\"\n            })\n          }), _jsxs(_components.td, {\n            children: [\"A partial collection config that allows you to override anything on the \", _jsx(_components.code, {\n              children: \"redirects\"\n            }), \" collection.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"redirectTypes\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"string[]\"\n            })\n          }), _jsx(_components.td, {\n            children: \"Provide an array of redirects if you want to provide options for the type of redirects to be supported.\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"redirectTypeFieldOverride\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"Field\"\n            })\n          }), _jsx(_components.td, {\n            children: \"A partial Field config that allows you to override the Redirect Type field if enabled above.\"\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Note that the fields in overrides take a function that receives the default fields and returns an array of fields. This allows you to add fields to the collection.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts\",\n        children: \"redirectsPlugin({\\n  collections: ['pages'],\\n  overrides: {\\n    fields: ({ defaultFields }) => {\\n      return [\\n        ...defaultFields,\\n        {\\n          type: 'text',\\n          name: 'customField',\\n        },\\n      ]\\n    },\\n  },\\n  redirectTypes: ['301', '302'],\\n  redirectTypeFieldOverride: {\\n    label: 'Redirect Type (Overridden)',\\n  },\\n})\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"TypeScript\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"All types can be directly imported:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts\",\n        children: \"import { PluginConfig } from '@payloadcms/plugin-redirects/types'\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Examples\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.a, {\n        href: \"https://github.com/payloadcms/payload/tree/main/templates\",\n        children: \"Templates Directory\"\n      }), \" also contains an official \", _jsx(_components.a, {\n        href: \"https://github.com/payloadcms/payload/tree/main/templates/website\",\n        children: \"Website Template\"\n      }), \" and \", _jsx(_components.a, {\n        href: \"https://github.com/payloadcms/payload/tree/main/templates/ecommerce\",\n        children: \"E-commerce Template\"\n      }), \", both of which use this plugin.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{}}},"__N_SSG":true}