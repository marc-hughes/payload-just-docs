{"pageProps":{"frontMatter":{"title":"Project Configuration","label":"Configuration","order":20,"desc":"Quickly configure and deploy your Payload Cloud project in a few simple steps.","keywords":"configuration, config, settings, project, cloud, payload cloud, deploy, deployment"},"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    strong: \"strong\",\n    code: \"code\",\n    a: \"a\"\n  }, _provideComponents(), props.components), {Banner} = _components;\n  if (!Banner) _missingMdxReference(\"Banner\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Select your plan\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Once you have created a project, you will need to select your plan. This will determine the resources that are allocated to your project and the features that are available to you.\"\n    }), \"\\n\", _jsx(Banner, {\n      type: \"success\",\n      children: _jsx(_components.p, {\n        children: \"Note: All Payload Cloud teams that deploy a project require a card on file.\\nThis helps us prevent fraud and abuse on our platform. If you select a plan\\nwith a free trial, you will not be charged until your trial period is over.\\nWe’ll remind you 7 days before your trial ends and you can cancel anytime.\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Project Details\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Option\"\n          }), _jsx(_components.th, {\n            children: \"Description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.strong, {\n              children: \"Region\"\n            })\n          }), _jsx(_components.td, {\n            children: \"Select the region closest to your audience. This will ensure the fastest communication between your data and your client.\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.strong, {\n              children: \"Project Name\"\n            })\n          }), _jsx(_components.td, {\n            children: \"A name for your project. You can change this at any time.\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.strong, {\n              children: \"Project Slug\"\n            })\n          }), _jsx(_components.td, {\n            children: \"Choose a unique slug to identify your project. This needs to be unique for your team and you can change it any time.\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.strong, {\n              children: \"Team\"\n            })\n          }), _jsx(_components.td, {\n            children: \"Select the team you want to create the project under. If this is your first project, a personal team will be created for you automatically. You can modify your team settings and invite new members at any time from the Team Settings page.\"\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Build Settings\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"If you are deploying a new project from a template, the following settings will be automatically configured for you. If you are using your own repository, you need to make sure your build settings are accurate for your project to deploy correctly.\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Option\"\n          }), _jsx(_components.th, {\n            children: \"Description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.strong, {\n              children: \"Root Directory\"\n            })\n          }), _jsxs(_components.td, {\n            children: [\"The folder where your \", _jsx(_components.code, {\n              children: \"package.json\"\n            }), \" file lives.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.strong, {\n              children: \"Install Command\"\n            })\n          }), _jsxs(_components.td, {\n            children: [\"The command used to install your modules, for example: \", _jsx(_components.code, {\n              children: \"yarn install\"\n            }), \" or \", _jsx(_components.code, {\n              children: \"npm install\"\n            })]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.strong, {\n              children: \"Build Command\"\n            })\n          }), _jsxs(_components.td, {\n            children: [\"The command used to build your application, for example: \", _jsx(_components.code, {\n              children: \"yarn build\"\n            }), \" or \", _jsx(_components.code, {\n              children: \"npm run build\"\n            })]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.strong, {\n              children: \"Serve Command\"\n            })\n          }), _jsxs(_components.td, {\n            children: [\"The command used to serve your application, for example: \", _jsx(_components.code, {\n              children: \"yarn serve\"\n            }), \" or \", _jsx(_components.code, {\n              children: \"npm run serve\"\n            })]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.strong, {\n              children: \"Branch to Deploy\"\n            })\n          }), _jsx(_components.td, {\n            children: \"Select the branch of your repository that you want to deploy from. This is the branch that will be used to build your project when you commit new changes.\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.strong, {\n              children: \"Default Domain\"\n            })\n          }), _jsx(_components.td, {\n            children: \"Set a default domain for your project. This must be unique and you will not able to change it. You can always add a custom domain later in your project settings.\"\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Environment Variables\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Any of the features in Payload Cloud that require environment variables will automatically be provided to your application. If your app requires any custom environment variables, you can set them here.\"\n    }), \"\\n\", _jsx(Banner, {\n      type: \"warning\",\n      children: _jsxs(_components.p, {\n        children: [\"Note: For security reasons, any variables you wish to provide to the \", _jsx(_components.a, {\n          href: \"../admin/overview\",\n          children: \"Admin\\nPanel\"\n        }), \" must be prefixed with \", _jsx(_components.code, {\n          children: \"NEXT_PUBLIC_\"\n        }), \".  Learn more\\n\", _jsx(_components.a, {\n          href: \"../configuration/environment-vars\",\n          children: \"here\"\n        }), \".\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Payment\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Payment methods can be set per project and can be updated any time. You can use team’s default payment method, or add a new one. Modify your payment methods in your Project settings / Team settings.\"\n    }), \"\\n\", _jsx(Banner, {\n      type: \"success\",\n      children: _jsxs(_components.p, {\n        children: [_jsx(_components.strong, {\n          children: \"Note:\"\n        }), \" All Payload Cloud teams that deploy a project require a card on\\nfile. This helps us prevent fraud and abuse on our platform. If you select a\\nplan with a free trial, you will not be charged until your trial period is\\nover. We’ll remind you 7 days before your trial ends and you can cancel\\nanytime.\"]\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{}}},"__N_SSG":true}