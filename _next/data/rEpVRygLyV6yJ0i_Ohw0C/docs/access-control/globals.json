{"pageProps":{"frontMatter":{"title":"Globals Access Control","label":"Globals","order":30,"desc":"Global-level Access Control is specified within each Global's `access` property and allows you to define which users can read or update Globals.","keywords":"globals, access control, permissions, documentation, Content Management System, cms, headless, javascript, node, react, nextjs"},"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    code: \"code\",\n    pre: \"pre\",\n    h2: \"h2\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    strong: \"strong\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"Global Access Control is \", _jsx(_components.a, {\n        href: \"../access-control/overview\",\n        children: \"Access Control\"\n      }), \" used to restrict access to \", _jsx(_components.a, {\n        href: \"../configuration/globals\",\n        children: \"Global\"\n      }), \" Documents, as well as what they can and cannot see within the \", _jsx(_components.a, {\n        href: \"../admin/overview\",\n        children: \"Admin Panel\"\n      }), \" as it relates to that Global.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To add Access Control to a Global, use the \", _jsx(_components.code, {\n        children: \"access\"\n      }), \" property in your \", _jsx(_components.a, {\n        href: \"../configuration/globals\",\n        children: \"Global Config\"\n      }), \":\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts\",\n        children: \"import type { GlobalConfig } from 'payload'\\n\\nexport const GlobalWithAccessControl: GlobalConfig = {\\n  // ...\\n  access: {\\n    // highlight-line\\n    // ...\\n  },\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Config Options\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Access Control is specific to the operation of the request.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To add Access Control to a \", _jsx(_components.a, {\n        href: \"../configuration/globals\",\n        children: \"Global\"\n      }), \", use the \", _jsx(_components.code, {\n        children: \"access\"\n      }), \" property in the \", _jsx(_components.a, {\n        href: \"../configuration/globals\",\n        children: \"Global Config\"\n      }), \":\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts\",\n        children: \"import { GlobalConfig } from 'payload'\\n\\nconst GlobalWithAccessControl: GlobalConfig = {\\n  // ...\\n  // highlight-start\\n  access: {\\n    read: ({ req: { user } }) => {...},\\n    update: ({ req: { user } }) => {...},\\n\\n    // Version-enabled Globals only\\n    readVersion: () => {...},\\n  },\\n  // highlight-end\\n}\\n\\nexport default Header\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The following options are available:\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Function\"\n          }), _jsx(_components.th, {\n            children: \"Allows/Denies Access\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.strong, {\n              children: _jsx(_components.code, {\n                children: \"read\"\n              })\n            })\n          }), _jsxs(_components.td, {\n            children: [\"Used in the \", _jsx(_components.code, {\n              children: \"findOne\"\n            }), \" Global operation. \", _jsx(_components.a, {\n              href: \"#read\",\n              children: \"More details\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.strong, {\n              children: _jsx(_components.code, {\n                children: \"update\"\n              })\n            })\n          }), _jsxs(_components.td, {\n            children: [\"Used in the \", _jsx(_components.code, {\n              children: \"update\"\n            }), \" Global operation. \", _jsx(_components.a, {\n              href: \"#update\",\n              children: \"More details\"\n            }), \".\"]\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If a Global supports \", _jsx(_components.a, {\n        href: \"../versions/overview\",\n        children: \"Versions\"\n      }), \", the following additional options are available:\"]\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Function\"\n          }), _jsx(_components.th, {\n            children: \"Allows/Denies Access\"\n          })]\n        })\n      }), _jsx(_components.tbody, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.strong, {\n              children: _jsx(_components.code, {\n                children: \"readVersions\"\n              })\n            })\n          }), _jsxs(_components.td, {\n            children: [\"Used to control who can read versions, and who can't. Will automatically restrict the Admin UI version viewing access. \", _jsx(_components.a, {\n              href: \"#read-versions\",\n              children: \"More details\"\n            }), \".\"]\n          })]\n        })\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Read\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Returns a boolean result or optionally a \", _jsx(_components.a, {\n        href: \"../queries/overview\",\n        children: \"query constraint\"\n      }), \" which limits who can read this global based on its current properties.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To add read Access Control to a \", _jsx(_components.a, {\n        href: \"../configuration/globals\",\n        children: \"Global\"\n      }), \", use the \", _jsx(_components.code, {\n        children: \"read\"\n      }), \" property in the \", _jsx(_components.a, {\n        href: \"../configuration/globals\",\n        children: \"Global Config\"\n      }), \":\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts\",\n        children: \"import { GlobalConfig } from 'payload'\\n\\nconst Header: GlobalConfig = {\\n  // ...\\n  // highlight-start\\n  read: {\\n    read: ({ req: { user } }) => {\\n      return Boolean(user)\\n    },\\n  },\\n  // highlight-end\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The following arguments are provided to the \", _jsx(_components.code, {\n        children: \"read\"\n      }), \" function:\"]\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Option\"\n          }), _jsx(_components.th, {\n            children: \"Description\"\n          })]\n        })\n      }), _jsx(_components.tbody, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.strong, {\n              children: _jsx(_components.code, {\n                children: \"req\"\n              })\n            })\n          }), _jsxs(_components.td, {\n            children: [\"The \", _jsx(_components.a, {\n              href: \"https://developer.mozilla.org/en-US/docs/Web/API/Request\",\n              children: \"Request\"\n            }), \" object containing the currently authenticated \", _jsx(_components.code, {\n              children: \"user\"\n            }), \".\"]\n          })]\n        })\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Update\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Returns a boolean result or optionally a \", _jsx(_components.a, {\n        href: \"../queries/overview\",\n        children: \"query constraint\"\n      }), \" which limits who can update this global based on its current properties.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To add update Access Control to a \", _jsx(_components.a, {\n        href: \"../configuration/globals\",\n        children: \"Global\"\n      }), \", use the \", _jsx(_components.code, {\n        children: \"access\"\n      }), \" property in the \", _jsx(_components.a, {\n        href: \"../configuration/globals\",\n        children: \"Global Config\"\n      }), \":\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts\",\n        children: \"import { GlobalConfig } from 'payload'\\n\\nconst Header: GlobalConfig = {\\n  // ...\\n  // highlight-start\\n  access: {\\n    update: ({ req: { user }, data }) => {\\n      return Boolean(user)\\n    },\\n  },\\n  // highlight-end\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The following arguments are provided to the \", _jsx(_components.code, {\n        children: \"update\"\n      }), \" function:\"]\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Option\"\n          }), _jsx(_components.th, {\n            children: \"Description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.strong, {\n              children: _jsx(_components.code, {\n                children: \"req\"\n              })\n            })\n          }), _jsxs(_components.td, {\n            children: [\"The \", _jsx(_components.a, {\n              href: \"https://developer.mozilla.org/en-US/docs/Web/API/Request\",\n              children: \"Request\"\n            }), \" object containing the currently authenticated \", _jsx(_components.code, {\n              children: \"user\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.strong, {\n              children: _jsx(_components.code, {\n                children: \"data\"\n              })\n            })\n          }), _jsx(_components.td, {\n            children: \"The data passed to update the global with.\"\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Read Versions\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If the Global has \", _jsx(_components.a, {\n        href: \"../versions/overview\",\n        children: \"Versions\"\n      }), \" enabled, the \", _jsx(_components.code, {\n        children: \"readVersions\"\n      }), \" Access Control function determines whether or not the currently logged in user can access the version history of a Document.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To add Read Versions Access Control to a Collection, use the \", _jsx(_components.code, {\n        children: \"readVersions\"\n      }), \" property in the \", _jsx(_components.a, {\n        href: \"../configuration/globals\",\n        children: \"Global Config\"\n      }), \":\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts\",\n        children: \"import type { GlobalConfig } from 'payload'\\n\\nexport const GlobalWithVersionsAccess: GlobalConfig = {\\n  // ...\\n  access: {\\n    // highlight-start\\n    readVersions: ({ req: { user } }) => {\\n      return Boolean(user)\\n    },\\n    // highlight-end\\n  },\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The following arguments are provided to the \", _jsx(_components.code, {\n        children: \"readVersions\"\n      }), \" function:\"]\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Option\"\n          }), _jsx(_components.th, {\n            children: \"Description\"\n          })]\n        })\n      }), _jsx(_components.tbody, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.strong, {\n              children: _jsx(_components.code, {\n                children: \"req\"\n              })\n            })\n          }), _jsxs(_components.td, {\n            children: [\"The \", _jsx(_components.a, {\n              href: \"https://developer.mozilla.org/en-US/docs/Web/API/Request\",\n              children: \"Request\"\n            }), \" object containing the currently authenticated \", _jsx(_components.code, {\n              children: \"user\"\n            }), \".\"]\n          })]\n        })\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}