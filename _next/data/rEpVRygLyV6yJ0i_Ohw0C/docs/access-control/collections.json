{"pageProps":{"frontMatter":{"title":"Collection Access Control","label":"Collections","order":20,"desc":"With Collection-level Access Control you can define which users can create, read, update or delete Collections.","keywords":"collections, access control, permissions, documentation, Content Management System, cms, headless, javascript, node, react, nextjs"},"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    code: \"code\",\n    pre: \"pre\",\n    h2: \"h2\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    strong: \"strong\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components), {Banner} = _components;\n  if (!Banner) _missingMdxReference(\"Banner\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"Collection Access Control is \", _jsx(_components.a, {\n        href: \"../access-control/overview\",\n        children: \"Access Control\"\n      }), \" used to restrict access to Documents within a \", _jsx(_components.a, {\n        href: \"../getting-started/concepts#collections\",\n        children: \"Collection\"\n      }), \", as well as what they can and cannot see within the \", _jsx(_components.a, {\n        href: \"../admin/overview\",\n        children: \"Admin Panel\"\n      }), \" as it relates to that Collection.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To add Access Control to a Collection, use the \", _jsx(_components.code, {\n        children: \"access\"\n      }), \" property in your \", _jsx(_components.a, {\n        href: \"../configuration/collections\",\n        children: \"Collection Config\"\n      }), \":\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts\",\n        children: \"import type { CollectionConfig } from 'payload'\\n\\nexport const CollectionWithAccessControl: CollectionConfig = {\\n  // ...\\n  access: {\\n    // highlight-line\\n    // ...\\n  },\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Config Options\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Access Control is specific to the operation of the request.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To add Access Control to a Collection, use the \", _jsx(_components.code, {\n        children: \"access\"\n      }), \" property in your \", _jsx(_components.a, {\n        href: \"../configuration/collections\",\n        children: \"Collection Config\"\n      }), \":\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts\",\n        children: \"import type { CollectionConfig } from 'payload';\\n\\nexport const CollectionWithAccessControl: CollectionConfig = {\\n  // ...\\n  // highlight-start\\n  access: {\\n    create: () => {...},\\n    read: () => {...},\\n    update: () => {...},\\n    delete: () => {...},\\n\\n    // Auth-enabled Collections only\\n    admin: () => {...},\\n    unlock: () => {...},\\n\\n    // Version-enabled Collections only\\n    readVersions: () => {...},\\n  },\\n  // highlight-end\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The following options are available:\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Function\"\n          }), _jsx(_components.th, {\n            children: \"Allows/Denies Access\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.strong, {\n              children: _jsx(_components.code, {\n                children: \"create\"\n              })\n            })\n          }), _jsxs(_components.td, {\n            children: [\"Used in the \", _jsx(_components.code, {\n              children: \"create\"\n            }), \" operation. \", _jsx(_components.a, {\n              href: \"#create\",\n              children: \"More details\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.strong, {\n              children: _jsx(_components.code, {\n                children: \"read\"\n              })\n            })\n          }), _jsxs(_components.td, {\n            children: [\"Used in the \", _jsx(_components.code, {\n              children: \"find\"\n            }), \" and \", _jsx(_components.code, {\n              children: \"findByID\"\n            }), \" operations. \", _jsx(_components.a, {\n              href: \"#read\",\n              children: \"More details\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.strong, {\n              children: _jsx(_components.code, {\n                children: \"update\"\n              })\n            })\n          }), _jsxs(_components.td, {\n            children: [\"Used in the \", _jsx(_components.code, {\n              children: \"update\"\n            }), \" operation. \", _jsx(_components.a, {\n              href: \"#update\",\n              children: \"More details\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.strong, {\n              children: _jsx(_components.code, {\n                children: \"delete\"\n              })\n            })\n          }), _jsxs(_components.td, {\n            children: [\"Used in the \", _jsx(_components.code, {\n              children: \"delete\"\n            }), \" operation. \", _jsx(_components.a, {\n              href: \"#delete\",\n              children: \"More details\"\n            }), \".\"]\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If a Collection supports \", _jsx(_components.a, {\n        href: \"../authentication/overview\",\n        children: _jsx(_components.code, {\n          children: \"Authentication\"\n        })\n      }), \", the following additional options are available:\"]\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Function\"\n          }), _jsx(_components.th, {\n            children: \"Allows/Denies Access\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.strong, {\n              children: _jsx(_components.code, {\n                children: \"admin\"\n              })\n            })\n          }), _jsxs(_components.td, {\n            children: [\"Used to restrict access to the \", _jsx(_components.a, {\n              href: \"../admin/overview\",\n              children: \"Admin Panel\"\n            }), \". \", _jsx(_components.a, {\n              href: \"#admin\",\n              children: \"More details\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.strong, {\n              children: _jsx(_components.code, {\n                children: \"unlock\"\n              })\n            })\n          }), _jsxs(_components.td, {\n            children: [\"Used to restrict which users can access the \", _jsx(_components.code, {\n              children: \"unlock\"\n            }), \" operation. \", _jsx(_components.a, {\n              href: \"#unlock\",\n              children: \"More details\"\n            }), \".\"]\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If a Collection supports \", _jsx(_components.a, {\n        href: \"../versions/overview\",\n        children: \"Versions\"\n      }), \", the following additional options are available:\"]\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Function\"\n          }), _jsx(_components.th, {\n            children: \"Allows/Denies Access\"\n          })]\n        })\n      }), _jsx(_components.tbody, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.strong, {\n              children: _jsx(_components.code, {\n                children: \"readVersions\"\n              })\n            })\n          }), _jsxs(_components.td, {\n            children: [\"Used to control who can read versions, and who can't. Will automatically restrict the Admin UI version viewing access. \", _jsx(_components.a, {\n              href: \"#read-versions\",\n              children: \"More details\"\n            }), \".\"]\n          })]\n        })\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Create\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Returns a boolean which allows/denies access to the \", _jsx(_components.code, {\n        children: \"create\"\n      }), \" request.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To add create Access Control to a Collection, use the \", _jsx(_components.code, {\n        children: \"create\"\n      }), \" property in the \", _jsx(_components.a, {\n        href: \"../configuration/collections\",\n        children: \"Collection Config\"\n      }), \":\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts\",\n        children: \"import type { CollectionConfig } from 'payload'\\n\\nexport const CollectionWithCreateAccess: CollectionConfig = {\\n  // ...\\n  access: {\\n    // highlight-start\\n    create: ({ req: { user }, data }) => {\\n      return Boolean(user)\\n    },\\n    // highlight-end\\n  },\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The following arguments are provided to the \", _jsx(_components.code, {\n        children: \"create\"\n      }), \" function:\"]\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Option\"\n          }), _jsx(_components.th, {\n            children: \"Description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.strong, {\n              children: _jsx(_components.code, {\n                children: \"req\"\n              })\n            })\n          }), _jsxs(_components.td, {\n            children: [\"The \", _jsx(_components.a, {\n              href: \"https://developer.mozilla.org/en-US/docs/Web/API/Request\",\n              children: \"Request\"\n            }), \" object containing the currently authenticated \", _jsx(_components.code, {\n              children: \"user\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.strong, {\n              children: _jsx(_components.code, {\n                children: \"data\"\n              })\n            })\n          }), _jsx(_components.td, {\n            children: \"The data passed to create the document with.\"\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Read\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Returns a boolean which allows/denies access to the \", _jsx(_components.code, {\n        children: \"read\"\n      }), \" request.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To add read Access Control to a Collection, use the \", _jsx(_components.code, {\n        children: \"read\"\n      }), \" property in the \", _jsx(_components.a, {\n        href: \"../configuration/collections\",\n        children: \"Collection Config\"\n      }), \":\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts\",\n        children: \"import type { CollectionConfig } from 'payload'\\n\\nexport const CollectionWithReadAccess: CollectionConfig = {\\n  // ...\\n  access: {\\n    // highlight-start\\n    read: ({ req: { user } }) => {\\n      return Boolean(user)\\n    },\\n    // highlight-end\\n  },\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(Banner, {\n      type: \"success\",\n      children: _jsxs(_components.p, {\n        children: [_jsx(_components.strong, {\n          children: \"Tip:\"\n        }), \" Return a \", _jsx(_components.a, {\n          href: \"../queries/overview\",\n          children: \"Query\"\n        }), \" to limit the Documents to only\\nthose that match the constraint. This can be helpful to restrict users' access\\nto specific Documents. \", _jsx(_components.a, {\n          href: \"../queries/overview\",\n          children: \"More details\"\n        }), \".\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"As your application becomes more complex, you may want to define your function in a separate file and import them into your Collection Config:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts\",\n        children: \"import type { Access } from 'payload'\\n\\nexport const canReadPage: Access = ({ req: { user } }) => {\\n  // Allow authenticated users\\n  if (user) {\\n    return true\\n  }\\n\\n  // By returning a Query, guest users can read public Documents\\n  // Note: this assumes you have a `isPublic` checkbox field on your Collection\\n  return {\\n    isPublic: {\\n      equals: true,\\n    },\\n  }\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The following arguments are provided to the \", _jsx(_components.code, {\n        children: \"read\"\n      }), \" function:\"]\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Option\"\n          }), _jsx(_components.th, {\n            children: \"Description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.strong, {\n              children: _jsx(_components.code, {\n                children: \"req\"\n              })\n            })\n          }), _jsxs(_components.td, {\n            children: [\"The \", _jsx(_components.a, {\n              href: \"https://developer.mozilla.org/en-US/docs/Web/API/Request\",\n              children: \"Request\"\n            }), \" object containing the currently authenticated \", _jsx(_components.code, {\n              children: \"user\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.strong, {\n              children: _jsx(_components.code, {\n                children: \"id\"\n              })\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.code, {\n              children: \"id\"\n            }), \" of document requested, if within \", _jsx(_components.code, {\n              children: \"findByID\"\n            }), \".\"]\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Update\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Returns a boolean which allows/denies access to the \", _jsx(_components.code, {\n        children: \"update\"\n      }), \" request.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To add update Access Control to a Collection, use the \", _jsx(_components.code, {\n        children: \"update\"\n      }), \" property in the \", _jsx(_components.a, {\n        href: \"../configuration/collections\",\n        children: \"Collection Config\"\n      }), \":\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts\",\n        children: \"import type { CollectionConfig } from 'payload'\\n\\nexport const CollectionWithUpdateAccess: CollectionConfig = {\\n  // ...\\n  access: {\\n    // highlight-start\\n    update: ({ req: { user } }) => {\\n      return Boolean(user)\\n    },\\n    // highlight-end\\n  },\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(Banner, {\n      type: \"success\",\n      children: _jsxs(_components.p, {\n        children: [_jsx(_components.strong, {\n          children: \"Tip:\"\n        }), \" Return a \", _jsx(_components.a, {\n          href: \"../queries/overview\",\n          children: \"Query\"\n        }), \" to limit the Documents to only\\nthose that match the constraint. This can be helpful to restrict users' access\\nto specific Documents. \", _jsx(_components.a, {\n          href: \"../queries/overview\",\n          children: \"More details\"\n        }), \".\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"As your application becomes more complex, you may want to define your function in a separate file and import them into your Collection Config:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts\",\n        children: \"import type { Access } from 'payload'\\n\\nexport const canUpdateUser: Access = ({ req: { user }, id }) => {\\n  // Allow users with a role of 'admin'\\n  if (user.roles && user.roles.some((role) => role === 'admin')) {\\n    return true\\n  }\\n\\n  // allow any other users to update only oneself\\n  return user.id === id\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The following arguments are provided to the \", _jsx(_components.code, {\n        children: \"update\"\n      }), \" function:\"]\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Option\"\n          }), _jsx(_components.th, {\n            children: \"Description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.strong, {\n              children: _jsx(_components.code, {\n                children: \"req\"\n              })\n            })\n          }), _jsxs(_components.td, {\n            children: [\"The \", _jsx(_components.a, {\n              href: \"https://developer.mozilla.org/en-US/docs/Web/API/Request\",\n              children: \"Request\"\n            }), \" object containing the currently authenticated \", _jsx(_components.code, {\n              children: \"user\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.strong, {\n              children: _jsx(_components.code, {\n                children: \"id\"\n              })\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.code, {\n              children: \"id\"\n            }), \" of document requested to update.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.strong, {\n              children: _jsx(_components.code, {\n                children: \"data\"\n              })\n            })\n          }), _jsx(_components.td, {\n            children: \"The data passed to update the document with.\"\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Delete\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Similarly to the Update function, returns a boolean or a \", _jsx(_components.a, {\n        href: \"/docs/queries/overview\",\n        children: \"query constraint\"\n      }), \" to limit which documents can be deleted by which users.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To add delete Access Control to a Collection, use the \", _jsx(_components.code, {\n        children: \"delete\"\n      }), \" property in the \", _jsx(_components.a, {\n        href: \"../configuration/collections\",\n        children: \"Collection Config\"\n      }), \":\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts\",\n        children: \"import type { CollectionConfig } from 'payload'\\n\\nexport const CollectionWithDeleteAccess: CollectionConfig = {\\n  // ...\\n  access: {\\n    // highlight-start\\n    delete: ({ req: { user } }) => {\\n      return Boolean(user)\\n    },\\n    // highlight-end\\n  },\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"As your application becomes more complex, you may want to define your function in a separate file and import them into your Collection Config:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts\",\n        children: \"import type { Access } from 'payload'\\n\\nexport const canDeleteCustomer: Access = async ({ req, id }) => {\\n  if (!id) {\\n    // allow the admin UI to show controls to delete since it is indeterminate without the `id`\\n    return true\\n  }\\n\\n  // Query another Collection using the `id`\\n  const result = await req.payload.find({\\n    collection: 'contracts',\\n    limit: 0,\\n    depth: 0,\\n    where: {\\n      customer: { equals: id },\\n    },\\n  })\\n\\n  return result.totalDocs === 0\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The following arguments are provided to the \", _jsx(_components.code, {\n        children: \"delete\"\n      }), \" function:\"]\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Option\"\n          }), _jsx(_components.th, {\n            children: \"Description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.strong, {\n              children: _jsx(_components.code, {\n                children: \"req\"\n              })\n            })\n          }), _jsxs(_components.td, {\n            children: [\"The \", _jsx(_components.a, {\n              href: \"https://developer.mozilla.org/en-US/docs/Web/API/Request\",\n              children: \"Request\"\n            }), \" object with additional \", _jsx(_components.code, {\n              children: \"user\"\n            }), \" property, which is the currently logged in user.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.strong, {\n              children: _jsx(_components.code, {\n                children: \"id\"\n              })\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.code, {\n              children: \"id\"\n            }), \" of document requested to delete.\"]\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Admin\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If the Collection is used to access the \", _jsx(_components.a, {\n        href: \"../admin/overview#the-admin-user-collection\",\n        children: \"Admin Panel\"\n      }), \", the \", _jsx(_components.code, {\n        children: \"Admin\"\n      }), \" Access Control function determines whether or not the currently logged in user can access the admin UI.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To add Admin Access Control to a Collection, use the \", _jsx(_components.code, {\n        children: \"admin\"\n      }), \" property in the \", _jsx(_components.a, {\n        href: \"../configuration/collections\",\n        children: \"Collection Config\"\n      }), \":\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts\",\n        children: \"import type { CollectionConfig } from 'payload'\\n\\nexport const CollectionWithAdminAccess: CollectionConfig = {\\n  // ...\\n  access: {\\n    // highlight-start\\n    admin: ({ req: { user } }) => {\\n      return Boolean(user)\\n    },\\n    // highlight-end\\n  },\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The following arguments are provided to the \", _jsx(_components.code, {\n        children: \"admin\"\n      }), \" function:\"]\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Option\"\n          }), _jsx(_components.th, {\n            children: \"Description\"\n          })]\n        })\n      }), _jsx(_components.tbody, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.strong, {\n              children: _jsx(_components.code, {\n                children: \"req\"\n              })\n            })\n          }), _jsxs(_components.td, {\n            children: [\"The \", _jsx(_components.a, {\n              href: \"https://developer.mozilla.org/en-US/docs/Web/API/Request\",\n              children: \"Request\"\n            }), \" object containing the currently authenticated \", _jsx(_components.code, {\n              children: \"user\"\n            }), \".\"]\n          })]\n        })\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Unlock\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Determines which users can \", _jsx(_components.a, {\n        href: \"/docs/authentication/operations#unlock\",\n        children: \"unlock\"\n      }), \" other users who may be blocked from authenticating successfully due to \", _jsx(_components.a, {\n        href: \"/docs/authentication/overview#config-options\",\n        children: \"failing too many login attempts\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To add Unlock Access Control to a Collection, use the \", _jsx(_components.code, {\n        children: \"unlock\"\n      }), \" property in the \", _jsx(_components.a, {\n        href: \"../configuration/collections\",\n        children: \"Collection Config\"\n      }), \":\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts\",\n        children: \"import type { CollectionConfig } from 'payload'\\n\\nexport const CollectionWithUnlockAccess: CollectionConfig = {\\n  // ...\\n  access: {\\n    // highlight-start\\n    unlock: ({ req: { user } }) => {\\n      return Boolean(user)\\n    },\\n    // highlight-end\\n  },\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The following arguments are provided to the \", _jsx(_components.code, {\n        children: \"unlock\"\n      }), \" function:\"]\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Option\"\n          }), _jsx(_components.th, {\n            children: \"Description\"\n          })]\n        })\n      }), _jsx(_components.tbody, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.strong, {\n              children: _jsx(_components.code, {\n                children: \"req\"\n              })\n            })\n          }), _jsxs(_components.td, {\n            children: [\"The \", _jsx(_components.a, {\n              href: \"https://developer.mozilla.org/en-US/docs/Web/API/Request\",\n              children: \"Request\"\n            }), \" object containing the currently authenticated \", _jsx(_components.code, {\n              children: \"user\"\n            }), \".\"]\n          })]\n        })\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Read Versions\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If the Collection has \", _jsx(_components.a, {\n        href: \"../versions/overview\",\n        children: \"Versions\"\n      }), \" enabled, the \", _jsx(_components.code, {\n        children: \"readVersions\"\n      }), \" Access Control function determines whether or not the currently logged in user can access the version history of a Document.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To add Read Versions Access Control to a Collection, use the \", _jsx(_components.code, {\n        children: \"readVersions\"\n      }), \" property in the \", _jsx(_components.a, {\n        href: \"../configuration/collections\",\n        children: \"Collection Config\"\n      }), \":\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts\",\n        children: \"import type { CollectionConfig } from 'payload'\\n\\nexport const CollectionWithVersionsAccess: CollectionConfig = {\\n  // ...\\n  access: {\\n    // highlight-start\\n    readVersions: ({ req: { user } }) => {\\n      return Boolean(user)\\n    },\\n    // highlight-end\\n  },\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The following arguments are provided to the \", _jsx(_components.code, {\n        children: \"readVersions\"\n      }), \" function:\"]\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Option\"\n          }), _jsx(_components.th, {\n            children: \"Description\"\n          })]\n        })\n      }), _jsx(_components.tbody, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.strong, {\n              children: _jsx(_components.code, {\n                children: \"req\"\n              })\n            })\n          }), _jsxs(_components.td, {\n            children: [\"The \", _jsx(_components.a, {\n              href: \"https://developer.mozilla.org/en-US/docs/Web/API/Request\",\n              children: \"Request\"\n            }), \" object containing the currently authenticated \", _jsx(_components.code, {\n              children: \"user\"\n            }), \".\"]\n          })]\n        })\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{}}},"__N_SSG":true}