{"pageProps":{"frontMatter":{"title":"Field-level Access Control","label":"Fields","order":40,"desc":"Field-level Access Control is specified within a field's config, and allows you to define which users can create, read or update Fields.","keywords":"fields, access control, permissions, documentation, Content Management System, cms, headless, javascript, node, react, nextjs"},"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    code: \"code\",\n    pre: \"pre\",\n    strong: \"strong\",\n    h2: \"h2\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components), {Banner} = _components;\n  if (!Banner) _missingMdxReference(\"Banner\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"Field Access Control is \", _jsx(_components.a, {\n        href: \"../access-control/overview\",\n        children: \"Access Control\"\n      }), \" used to restrict access to specific \", _jsx(_components.a, {\n        href: \"../fields/overview\",\n        children: \"Fields\"\n      }), \" within a Document.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To add Access Control to a Field, use the \", _jsx(_components.code, {\n        children: \"access\"\n      }), \" property in your \", _jsx(_components.a, {\n        href: \"../fields/overview\",\n        children: \"Field Config\"\n      }), \":\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts\",\n        children: \"import type { Field } from 'payload'\\n\\nexport const FieldWithAccessControl: Field = {\\n  // ...\\n  access: {\\n    // highlight-line\\n    // ...\\n  },\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(Banner, {\n      type: \"warning\",\n      children: _jsxs(_components.p, {\n        children: [_jsx(_components.strong, {\n          children: \"Note:\"\n        }), \" Field Access Controls does not support returning\\n\", _jsx(_components.a, {\n          href: \"../queries/overview\",\n          children: \"Query\"\n        }), \" constraints like \", _jsx(_components.a, {\n          href: \"./collections\",\n          children: \"Collection Access\\nControl\"\n        }), \" does.\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Config Options\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Access Control is specific to the operation of the request.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To add Access Control to a Field, use the \", _jsx(_components.code, {\n        children: \"access\"\n      }), \" property in the \", _jsx(_components.a, {\n        href: \"../fields/overview\",\n        children: \"Field Config\"\n      }), \":\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts\",\n        children: \"import type { CollectionConfig } from 'payload';\\n\\nexport const Posts: CollectionConfig = {\\n  slug: 'posts',\\n  fields: [\\n    {\\n      name: 'title',\\n      type: 'text',\\n      // highlight-start\\n      access: {\\n        create: ({ req: { user } }) => { ... },\\n        read: ({ req: { user } }) => { ... },\\n        update: ({ req: { user } }) => { ... },\\n      },\\n      // highlight-end\\n    };\\n  ],\\n};\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The following options are available:\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Function\"\n          }), _jsx(_components.th, {\n            children: \"Purpose\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.strong, {\n              children: _jsx(_components.code, {\n                children: \"create\"\n              })\n            })\n          }), _jsxs(_components.td, {\n            children: [\"Allows or denies the ability to set a field's value when creating a new document. \", _jsx(_components.a, {\n              href: \"#create\",\n              children: \"More details\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.strong, {\n              children: _jsx(_components.code, {\n                children: \"read\"\n              })\n            })\n          }), _jsxs(_components.td, {\n            children: [\"Allows or denies the ability to read a field's value. \", _jsx(_components.a, {\n              href: \"#read\",\n              children: \"More details\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.strong, {\n              children: _jsx(_components.code, {\n                children: \"update\"\n              })\n            })\n          }), _jsxs(_components.td, {\n            children: [\"Allows or denies the ability to update a field's value \", _jsx(_components.a, {\n              href: \"#update\",\n              children: \"More details\"\n            }), \".\"]\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Create\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Returns a boolean which allows or denies the ability to set a field's value when creating a new document. If \", _jsx(_components.code, {\n        children: \"false\"\n      }), \" is returned, any passed values will be discarded.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Available argument properties:\"\n      })\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Option\"\n          }), _jsx(_components.th, {\n            children: \"Description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.strong, {\n              children: _jsx(_components.code, {\n                children: \"req\"\n              })\n            })\n          }), _jsxs(_components.td, {\n            children: [\"The \", _jsx(_components.a, {\n              href: \"https://developer.mozilla.org/en-US/docs/Web/API/Request\",\n              children: \"Request\"\n            }), \" object containing the currently authenticated \", _jsx(_components.code, {\n              children: \"user\"\n            })]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.strong, {\n              children: _jsx(_components.code, {\n                children: \"data\"\n              })\n            })\n          }), _jsx(_components.td, {\n            children: \"The full data passed to create the document.\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.strong, {\n              children: _jsx(_components.code, {\n                children: \"siblingData\"\n              })\n            })\n          }), _jsx(_components.td, {\n            children: \"Immediately adjacent field data passed to create the document.\"\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Read\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Returns a boolean which allows or denies the ability to read a field's value. If \", _jsx(_components.code, {\n        children: \"false\"\n      }), \", the entire property is omitted from the resulting document.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Available argument properties:\"\n      })\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Option\"\n          }), _jsx(_components.th, {\n            children: \"Description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.strong, {\n              children: _jsx(_components.code, {\n                children: \"req\"\n              })\n            })\n          }), _jsxs(_components.td, {\n            children: [\"The \", _jsx(_components.a, {\n              href: \"https://developer.mozilla.org/en-US/docs/Web/API/Request\",\n              children: \"Request\"\n            }), \" object containing the currently authenticated \", _jsx(_components.code, {\n              children: \"user\"\n            })]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.strong, {\n              children: _jsx(_components.code, {\n                children: \"id\"\n              })\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.code, {\n              children: \"id\"\n            }), \" of the document being read\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.strong, {\n              children: _jsx(_components.code, {\n                children: \"doc\"\n              })\n            })\n          }), _jsx(_components.td, {\n            children: \"The full document data.\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.strong, {\n              children: _jsx(_components.code, {\n                children: \"siblingData\"\n              })\n            })\n          }), _jsx(_components.td, {\n            children: \"Immediately adjacent field data of the document being read.\"\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Update\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Returns a boolean which allows or denies the ability to update a field's value. If \", _jsx(_components.code, {\n        children: \"false\"\n      }), \" is returned, any passed values will be discarded.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If \", _jsx(_components.code, {\n        children: \"false\"\n      }), \" is returned and you attempt to update the field's value, the operation will \", _jsx(_components.strong, {\n        children: \"not\"\n      }), \" throw an error however the field will be omitted from the update operation and the value will remain unchanged.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Available argument properties:\"\n      })\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Option\"\n          }), _jsx(_components.th, {\n            children: \"Description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.strong, {\n              children: _jsx(_components.code, {\n                children: \"req\"\n              })\n            })\n          }), _jsxs(_components.td, {\n            children: [\"The \", _jsx(_components.a, {\n              href: \"https://developer.mozilla.org/en-US/docs/Web/API/Request\",\n              children: \"Request\"\n            }), \" object containing the currently authenticated \", _jsx(_components.code, {\n              children: \"user\"\n            })]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.strong, {\n              children: _jsx(_components.code, {\n                children: \"id\"\n              })\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.code, {\n              children: \"id\"\n            }), \" of the document being updated\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.strong, {\n              children: _jsx(_components.code, {\n                children: \"data\"\n              })\n            })\n          }), _jsx(_components.td, {\n            children: \"The full data passed to update the document.\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.strong, {\n              children: _jsx(_components.code, {\n                children: \"siblingData\"\n              })\n            })\n          }), _jsx(_components.td, {\n            children: \"Immediately adjacent field data passed to update the document with.\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.strong, {\n              children: _jsx(_components.code, {\n                children: \"doc\"\n              })\n            })\n          }), _jsx(_components.td, {\n            children: \"The full document data, before the update is applied.\"\n          })]\n        })]\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{}}},"__N_SSG":true}